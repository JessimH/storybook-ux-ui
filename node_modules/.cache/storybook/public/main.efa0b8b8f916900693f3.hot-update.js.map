{"version":3,"file":"main.efa0b8b8f916900693f3.hot-update.js","sources":["webpack:///\\.)(?69fc","webpack:///./stories/Icon.stories.js"],"sourcesContent":["var map = {\n\t\"./Button.stories.js\": \"./stories/Button.stories.js\",\n\t\"./Corps.stories.js\": \"./stories/Corps.stories.js\",\n\t\"./Icon.stories.js\": \"./stories/Icon.stories.js\",\n\t\"./SubtitleH2.stories.js\": \"./stories/SubtitleH2.stories.js\",\n\t\"./SubtitleH3.stories.js\": \"./stories/SubtitleH3.stories.js\",\n\t\"./SubtitleH5.stories.js\": \"./stories/SubtitleH5.stories.js\",\n\t\"./SubtitleH6.stories.js\": \"./stories/SubtitleH6.stories.js\",\n\t\"./Title.stories.js\": \"./stories/Title.stories.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./stories sync recursive ^\\\\.(?:(?:^|\\\\/|(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js|jsx|ts|tsx))$\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { createButton } from './Button';\\n\\n// More on default export: https://storybook.js.org/docs/html/writing-stories/introduction#default-export\\nexport default {\\n  title: 'Buttons',\\n  // More on argTypes: https://storybook.js.org/docs/html/api/argtypes\\n  argTypes: {\\n    label: { control: 'text' },\\n    primary: { control: 'boolean' },\\n    disable: { control: 'boolean' },\\n  },\\n};\\n\\n// More on component templates: https://storybook.js.org/docs/html/writing-stories/introduction#using-args\\nconst Template = ({ label, ...args }) => {\\n  // You can either use a function to create DOM elements or use a plain html string!\\n  // return `<div>${label}</div>`;\\n  return createButton({ label, ...args });\\n};\\n\\nexport const Primary = Template.bind({});\\n// More on args: https://storybook.js.org/docs/html/writing-stories/args\\nPrimary.args = {\\n  primary: true,\\n  label: 'Button',\\n  disable: false\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n  primary: false,\\n  label: 'Button',\\n  disable: false\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":15},\"endLoc\":{\"col\":1,\"line\":19},\"startBody\":{\"col\":17,\"line\":15},\"endBody\":{\"col\":1,\"line\":19}},\"Secondary\":{\"startLoc\":{\"col\":17,\"line\":15},\"endLoc\":{\"col\":1,\"line\":19},\"startBody\":{\"col\":17,\"line\":15},\"endBody\":{\"col\":1,\"line\":19}}};\n    \nimport { createButton } from './Button';\n\n// More on default export: https://storybook.js.org/docs/html/writing-stories/introduction#default-export\nexport default {\n  title: 'Buttons',\n  // More on argTypes: https://storybook.js.org/docs/html/api/argtypes\n  argTypes: {\n    label: { control: 'text' },\n    primary: { control: 'boolean' },\n    disable: { control: 'boolean' },\n  },\n};\n\n// More on component templates: https://storybook.js.org/docs/html/writing-stories/introduction#using-args\nconst Template = ({ label, ...args }) => {\n  // You can either use a function to create DOM elements or use a plain html string!\n  // return `<div>${label}</div>`;\n  return createButton({ label, ...args });\n};\n\nexport const Primary = Template.bind({});;\n// More on args: https://storybook.js.org/docs/html/writing-stories/args\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n  disable: false\n};\n\nexport const Secondary = Template.bind({});\nSecondary.args = {\n  primary: false,\n  label: 'Button',\n  disable: false\n};\n\n\n\nPrimary.parameters = { storySource: { source: \"({ label, ...args }) => {\\n  // You can either use a function to create DOM elements or use a plain html string!\\n  // return `<div>${label}</div>`;\\n  return createButton({ label, ...args });\\n}\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"({ label, ...args }) => {\\n  // You can either use a function to create DOM elements or use a plain html string!\\n  // return `<div>${label}</div>`;\\n  return createButton({ label, ...args });\\n}\" }, ...Secondary.parameters };"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAHA;AACA;AAUA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}